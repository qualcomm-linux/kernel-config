---
name: _ubuntu
description: Reusable workflow for ubuntu package generation

on:
  workflow_call:
    inputs:
      repo:
        description: 'Repo Name'
        required: false
        type: string
      ref:
        description: 'Branch or tag name'
        required: false
        type: string
      build_utils_ref:
        description: 'Reference for qcom-build-utils (latest commit sha)'
        required: false
        type: string
        default: 'latest'
      pr:
        description: 'Pull Request Number'
        required: false
        type: string
        default: ''
      build_matrix:
        description: 'Build matrix for parallel builds'
        required: true
        type: string

    outputs:
      artifacts_location:
        description: 'AWS location of ubuntu artifacts'
        value: ${{ jobs.generate_debians.outputs.artifacts_location }}

jobs:
  generate_debians:
    name: Build
    runs-on:
      group: GHA-Kernel-SelfHosted-RG
      labels: [self-hosted, kernel-prd-u2404-arm64-xlrg-od-ephem]
    outputs:
      artifacts_location: ${{ steps.build.outputs.artifacts_location }}
    strategy:
      fail-fast: false
      matrix:
        ubuntu_matrix: ${{ fromJson(inputs.build_matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Ubuntu packages
        id: build
        uses: qualcomm-linux/kernel-config/.github/actions/build_ubuntu@main
        with:
          repo: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          build_utils_ref: ${{ inputs.build_utils_ref }}
          pr: ${{ inputs.pr }}
          bootbin: ${{ matrix.ubuntu_matrix.bootbin }}
          content: ${{ matrix.ubuntu_matrix.content }}
          machine: ${{ matrix.ubuntu_matrix.machine }}
          target: ${{ matrix.ubuntu_matrix.target }}
          efi: ${{ matrix.ubuntu_matrix.efi }}
          firmware: ${{ matrix.ubuntu_matrix.firmware }}
        env:
          token: ${{ secrets.PAT }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
